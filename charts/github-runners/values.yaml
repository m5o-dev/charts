# Configurações para os GitHub Runners

# Namespace onde o controller está instalado
controllerNamespace: "actions-runner-system"

# Configurações gerais para todos os runners
defaults:
  # Recursos padrão para todos os runners
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

  # Desabilitar Docker completamente
  dockerEnabled: false

# Definições dos diferentes runners por repositório
runners:
  # Runner para um repositório específico
  repo-runner:
    enabled: false # Desativado para começar apenas com o runner da organização
    type: RunnerDeployment
    replicas: 2
    repository: "m5o-dev/charts" # Seu repositório
    labels:
    - kubernetes
    - production
    # Configurações específicas deste runner (sobrescrevem os defaults)
    resources:
      limits:
        cpu: 2000m
        memory: 4Gi
    dockerEnabled: false

  # Runner para uma organização 
  org-runner:
    enabled: true
    type: RunnerDeployment
    replicas: 3
    organization: "m5o-dev" # Sua organização
    labels:
    - "self-hosted"
    - "linux"
    - "x64"
    # Você pode adicionar variáveis de ambiente específicas
    env:
    - name: RUNNER_FEATURE_FLAG_EPHEMERAL
      value: "true"
    dockerEnabled: false

  # Runner com auto-scaling baseado em pending workflows
  autoscaling-runner:
    enabled: false # Desativado por padrão
    type: RunnerSet
    repository: "m5o-dev/charts" # Seu repositório
    labels:
    - kubernetes
    - ephemeral
    # Configuração de auto-scaling
    autoscaling:
      minReplicas: 1
      maxReplicas: 5
      metrics:
      # Auto-scaling baseado em pending workflows
      - type: PercentageRunnersBusy
        scaleUpThreshold: '0.75'
        scaleDownThreshold: '0.25'
        scaleUpFactor: '2'
        scaleDownFactor: '0.5'
    dockerEnabled: false

# Configurações para o IngressRoute usando o boilerplate
helm-boilerplate:
  ingressRoutes:
    github-runners:
      enabled: false # Normalmente não é necessário um ingress para runners
